syntax = "proto3";

package team;

import "google/api/annotations.proto";
import "protoc-gen-swagger/options/annotations.proto";

option (grpc.gateway.protoc_gen_swagger.options.openapiv2_swagger) = {
  info: {
    title: "team service";
    version: "1.0";
    contact: {
      name: "team service";
      url: "https://github.com/ckbball/dev-team";
      email: "blah@happy.org";
    };
  };
  schemes: HTTP;
  schemes: HTTPS;
  consumes: "application/json";
  produces: "application/json";
  responses: {
    key: "404";
    value: {
      description: "Returned when resource doesn't exist";
      schema: {
        json_schema: {
          type: STRING;
        }
      }
    }
  }
};

service TeamService {
  rpc CreateTeam(TeamUpsertRequest) returns (TeamUpsertResponse) {
    option (google.api.http) = {
      post: "/v1/teams",
      body: "*"
    };
  }

  rpc DeleteTeam(TeamDeleteRequest) returns (TeamDeleteResponse) {
    option (google.api.http) = {
      delete: "/v1/teams/{id}"
    };
  }

  rpc AddMember(MemberUpsertRequest) returns (MemberUpsertResponse) {
    option (google.api.http) = {
      post: "/v1/teams/{id}/members",
      body: "*"
    };
  }

  rpc RemoveMember(MemberDeleteRequest) returns (MemberDeleteResponse) {
    option (google.api.http) = {
      delete: "/v1/teams/{id}/members/{member_number}",
    };
  }

  rpc UpsertTeamProject(ProjectUpsertRequest) returns (ProjectUpsertResponse) {
    option (google.api.http) = {
      post: "/v1/teams/{id}/project",
      body: "*"
    };
  }

  rpc GetTeamByTeamName(GetByTeamNameRequest) returns (GetByTeamNameResponse) {
    option (google.api.http) = {
      get: "/{api}/teams/{id}"
    };
  }

  rpc GetTeamsByUserId(GetByUserIdRequest) returns (GetByUserIdResponse) {
    option (google.api.http) = {
      get: "/{api}/teams/users/{id}"
    };
  }

  rpc GetTeamsByCurrentUser(GetByUserIdRequest) returns (GetByUserIdResponse) {
    option (google.api.http) = {
      get: "/{api}/myteams"
    };
  }

  rpc GetTeams(GetTeamsRequest) returns (GetTeamsResponse) {
    option (google.api.http) = {
      get: "/{api}/teams"
    };
  }
}

message TeamUpsertRequest {
  string api = 1;
  Team team = 2;
}

message TeamUpsertResponse {
  string api = 1;
  string status = 2;
  string id = 3;
}

message TeamDeleteRequest {
  string api = 1;
  string id = 2;
}

message TeamDeleteResponse {
  string api = 1;
  string status = 2;
  int64 teams = 3;
  int64 members = 4;
  int64 skills = 5;
  string id = 6;
}

message MemberUpsertRequest {
  string api = 1;
  string id = 2;
  string member_id = 3;
  string member_email = 4;
  string role = 5;
}

message MemberUpsertResponse {
  string api = 1;
  string member_number = 2;
  string status = 3;
}

message MemberDeleteRequest {
  string api = 1;
  string id = 2;
  string member_number = 3;
}

message MemberDeleteResponse {
  string api = 1;
  string status = 2;
  int64 count = 3;
}

message ProjectUpsertRequest {
  Project project = 1;
  string api = 2;
  string id = 3;
}
message ProjectUpsertResponse {
  string api = 1;
  string status = 2;
}

message GetByTeamNameRequest {
  string api = 1;
  string name = 2;
}

message GetByTeamNameResponse {
  string api = 1;
  string id = 2;
  Team team = 3;
  string status = 4;
}

message GetByUserIdRequest {
  string api = 1;
  string id = 2;
}

message GetByUserIdResponse {
  string api = 1;
  string id = 2;
  repeated Team teams = 3;
  string status = 4;
}

message GetTeamsRequest {
  string api = 1;
  int64 page = 2;
  int64 limit = 3;
  string role = 4;
  int64 level = 5;
  string technology = 6;
}

message GetTeamsResponse {
  string api = 1;
  repeated Team teams = 2;
  string status = 3;
}

message Team {
  string leader = 1;
  repeated Member members = 2;
  string name = 3;
  int32 open_roles = 4;
  repeated string skills = 5;
  int32 size = 6;
  int32 last_active = 7;
  string id = 8;
  Project project = 9;
}

message Member {
  string email = 1;
  int32 id = 2;
  string role = 3;

}

message Project {
  string description = 1;
  repeated string languages = 2;
  string name = 3;
  string github_link = 4;
  int32 complexity = 5;
  int32 duration = 6;
}